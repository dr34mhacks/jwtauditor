function initSignatureVerification(){const a=document.getElementById('verify-signature-btn'),b=document.getElementById('verify-secret'),c=document.getElementById('verification-result'),d=document.getElementById('edited-jwt-output');if(!a||!b||!c){console.error('Signature verification elements not found');return}a.addEventListener('click',async()=>{const e=d.textContent,f=b.value;if(!e){showNotification('No JWT to verify','warning');return}if(!f){showNotification('Please enter a secret key','warning');return}try{jwtEditor.token!==e&&jwtEditor.loadToken(e);const g=await jwtEditor.verifySignature(f);c.className=g?'verification-result success':'verification-result error';c.innerHTML=g?'<i class=\"fas fa-check-circle\"></i> Signature is valid! The token was signed with this secret.':'<i class=\"fas fa-times-circle\"></i> Signature is invalid. The token was not signed with this secret.';showNotification(g?'Signature verified successfully!':'Signature verification failed',g?'success':'warning')}catch(g){c.className='verification-result error';c.innerHTML=`<i class=\"fas fa-exclamation-circle\"></i> Error: ${g.message}`;showNotification(`Error: ${g.message}`,'error')}})}document.addEventListener('DOMContentLoaded',initSignatureVerification);