class JWTBruteforcer{constructor(){this.token=null;this.header=null;this.payload=null;this.signature=null;this.algorithm=null;this.wordlist=[];this.customWordlist=null;this.isRunning=!1;this.shouldStop=!1;this.progress=0;this.nonHmacAlgorithmDetected=!1;this.detectedAlgorithm=null;this.defaultWordlist=null}async loadDefaultWordlist(){if(this.defaultWordlist)return this.defaultWordlist;try{const a=await fetch('jwt_auditor_potential_secrets.txt'),b=await a.text();this.defaultWordlist=b.split('\n').map(c=>c.trim()).filter(c=>c.length>0);return this.defaultWordlist}catch(a){console.error('Failed to load default wordlist:',a);return['secret','password','123456','admin','test','key','jwt','token','default','qwerty']}}init(a){try{this.token=a;const b=jwtDecoder.decode(a);this.header=b.header;this.payload=b.payload;this.signature=b.signature;this.algorithm=this.header.alg;this.nonHmacAlgorithmDetected=!1;this.detectedAlgorithm=this.algorithm;if(this.algorithm!=='none'&&!this.algorithm.startsWith('HS')){this.nonHmacAlgorithmDetected=!0;return!1}return!0}catch(b){console.error('Failed to initialize bruteforcer:',b);return!1}}setCustomWordlist(a){this.customWordlist=a.split('\n').map(b=>b.trim()).filter(b=>b.length>0)}async start(a,b,c){if(this.isRunning)return;this.isRunning=!0;this.shouldStop=!1;this.progress=0;try{if(a==='custom'&&this.customWordlist){this.wordlist=this.customWordlist}else{this.wordlist=await this.loadDefaultWordlist()}const d=this.wordlist.length;let e=0;b(0);for(const f of this.wordlist){if(this.shouldStop)break;if(await this.testSecret(f)){c({success:!0,secret:f});this.isRunning=!1;return}e++;this.progress=Math.floor(e/d*100);b(this.progress);if(e%50===0){await new Promise(g=>setTimeout(g,1))}}c({success:!1,error:'No matching secret found in the wordlist.'});this.isRunning=!1}catch(d){console.error('Bruteforce error:',d);c({success:!1,error:d.message});this.isRunning=!1}}async testSecret(a){try{return await verifySignature(this.token,a)}catch(b){return!1}}stop(){this.shouldStop=!0;this.isRunning=!1}}const jwtBruteforcer=new JWTBruteforcer;