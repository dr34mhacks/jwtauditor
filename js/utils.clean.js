const isWasmSupported=()=>!0;const base64UrlEncode=a=>{let b=btoa(a);return b.replace(/\+/g,'-').replace(/\//g,'_').replace(/=+$/,'')};const base64UrlDecode=a=>{a=a.replace(/-/g,'+').replace(/_/g,'/');switch(a.length%4){case 0:break;case 2:a+='==';break;case 3:a+='=';break;default:throw new Error('Invalid base64url string')}try{return atob(a)}catch(b){throw new Error('Failed to decode base64url string')}};const stringToUtf8Array=a=>{const b=[];for(let c=0;c<a.length;c++){let d=a.charCodeAt(c);if(d<128)b.push(d);else if(d<2048)b.push(192|d>>6,128|d&63);else if(d<55296||d>=57344)b.push(224|d>>12,128|d>>6&63,128|d&63);else{c++;d=65536+(d&1023)<<10|a.charCodeAt(c)&1023;b.push(240|d>>18,128|d>>12&63,128|d>>6&63,128|d&63)}}return b};const formatJSON=a=>{if(!a)return'';try{const b=typeof a==='string'?JSON.parse(a):a,c=JSON.stringify(b,null,2);return c.replace(/&/g,'&amp;').replace(/</g,'&lt;').replace(/>/g,'&gt;').replace(/("(\\u[a-zA-Z0-9]{4}|\\[^u]|[^\\"])*"(\s*:)?|\b(true|false|null)\b|-?\d+(?:\.\d*)?(?:[eE][+\-]?\d+)?)/g,d=>{let e='json-number';if(/^"/.test(d)){if(/:$/.test(d))e='json-key';else e='json-string'}else if(/true|false/.test(d))e='json-boolean';else if(/null/.test(d))e='json-null';return`<span class="${e}">${d}</span>`}).replace(/([{}[\],])/g,'<span class="json-punctuation">$1</span>')}catch(b){console.error('Error formatting JSON:',b);return String(a)}};const copyToClipboard=a=>{return new Promise((b,c)=>{if(!navigator.clipboard){const d=document.createElement('textarea');d.value=a;d.style.position='fixed';document.body.appendChild(d);d.focus();d.select();try{const e=document.execCommand('copy');document.body.removeChild(d);e?b():c(new Error('Unable to copy'))}catch(e){document.body.removeChild(d);c(e)}}else navigator.clipboard.writeText(a).then(b).catch(c)})};const showNotification=(a,b='info',c=3000)=>{const d=document.querySelector('.notification');d&&d.remove();const e=document.createElement('div');e.className=`notification ${b}`;e.textContent=a;document.body.appendChild(e);setTimeout(()=>{e.classList.add('show')},10);setTimeout(()=>{e.classList.remove('show');setTimeout(()=>{e.remove()},300)},c)};const isValidJSON=a=>{try{JSON.parse(a);return!0}catch(b){return!1}};const getCurrentTimestamp=()=>Math.floor(Date.now()/1000);const formatTimestamp=a=>{const b=new Date(a*1000);return b.toLocaleString()};const isExpired=a=>{const b=getCurrentTimestamp();return a<b};const timeUntilExpiration=a=>{const b=getCurrentTimestamp(),c=a-b;if(c<=0)return'Expired';const d=Math.floor(c/86400),e=Math.floor(c%86400/3600),f=Math.floor(c%3600/60),g=c%60;return d>0?`${d}d ${e}h ${f}m`:e>0?`${e}h ${f}m ${g}s`:f>0?`${f}m ${g}s`:`${g}s`};const computeHmac=async(a,b,c)=>{let d;if(a==='HS256')d=CryptoJS.HmacSHA256(c,b);else if(a==='HS384')d=CryptoJS.HmacSHA384(c,b);else if(a==='HS512')d=CryptoJS.HmacSHA512(c,b);else throw new Error(`Unsupported algorithm: ${a}`);return CryptoJS.enc.Base64.stringify(d)};const verifySignature=async(a,b)=>{try{const c=a.split('.');if(c.length!==3)return!1;const d=JSON.parse(base64UrlDecode(c[0])),e=d.alg;if(e==='none')return!0;if(!e.startsWith('HS'))throw new Error(`Algorithm ${e} not supported in fallback mode`);const f=`${c[0]}.${c[1]}`,g=c[2],h=await computeHmac(e,b,f),i=h.replace(/\+/g,'-').replace(/\//g,'_').replace(/=/g,'');return i===g}catch(c){console.error('Error verifying signature:',c);return!1}};const generateRSAKeyPair=async(a=2048)=>{try{if(!window.crypto||!window.crypto.subtle)throw new Error('Web Crypto API is not available in this browser');const b=await window.crypto.subtle.generateKey({name:'RSASSA-PKCS1-v1_5',modulusLength:a,publicExponent:new Uint8Array([1,0,1]),hash:'SHA-256'},!0,['sign','verify']),c=await window.crypto.subtle.exportKey('pkcs8',b.privateKey),d=await window.crypto.subtle.exportKey('spki',b.publicKey),e=derToPem(c,'PRIVATE KEY'),f=derToPem(d,'PUBLIC KEY');return{privateKey:e,publicKey:f}}catch(b){console.error('Error generating RSA key pair:',b);throw new Error(`Failed to generate RSA key pair: ${b.message}`)}};const derToPem=(a,b)=>{const c=new Uint8Array(a),d=btoa(String.fromCharCode(...c)),e=d.replace(/(.{64})/g,'$1\n');return`-----BEGIN ${b}-----\n${e}\n-----END ${b}-----`};const isJSRSASignAvailable=()=>typeof KJUR!=='undefined'&&KJUR.crypto&&KJUR.crypto.Signature&&typeof KEYUTIL!=='undefined';document.addEventListener('DOMContentLoaded',async()=>{setTimeout(()=>{isJSRSASignAvailable()?console.log('✅ jsrsasign library is available and ready'):console.warn('⚠️ jsrsasign library is not available - RSA operations will fail')},2000)});